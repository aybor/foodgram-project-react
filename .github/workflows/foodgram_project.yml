# .github/workflows/**foodgram-project.yml**
name: Django-app workflow

on: [push]

jobs:
  tests:
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    # Запуск actions checkout — готового скрипта
    # для клонирования репозитория
    - uses: actions/checkout@v2
    - name: Set up Python
      # Запуск actions setup-python — готового скрипта
      # для развёртывания окружения Python
      uses: actions/setup-python@v2
      with:
        # Выбор версии Python
        python-version: 3.7

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8
        # установка зависимостей
        pip install -r backend/requirements.txt

    - name: Test with flake8
      run: |
        # запуск проверки проекта по flake8
        flake8

    - name: Run migrations
      env:
        DJANGO_SETTINGS_MODULE: backend.settings
        DEBUG: 1
        ALLOWED_HOSTS: "*"
      run: |
        python backend/manage.py migrate

    - name: Test with django unittest
      env:
        DJANGO_SETTINGS_MODULE: backend.settings
        DB_ENGINE: ${{ secrets.DB_ENGINE }}
        DB_NAME: ${{ secrets.DB_NAME }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
      run: |
        python backend/manage.py test